@page "/Polls"
@using DataAccess
@using DataAccess.Context
@using DataAccess.Data
@using DataAccess.Services
@using DataAccess.Models

@using System.Security.Claims
@inject PollDataAccess _pollData
@inject QuestionDataAccess _questions
@inject PollPublishService _service
@inject AuthenticationStateProvider _provider

<div class="m-2 p-2">

    @if (UserId != null)
    {
        <h3>My Polls</h3>

        <div class="row">
            <div class="col-md-8">

                <button @onclick="(()=>ToggleCreatePanel(null))" class="btn btn-sm btn-outline-primary">
                    Create Poll
                </button>

                @if (myPolls != null && myPolls.Count > 0)
                {
                    foreach (var item in myPolls.OrderBy(x => x.PollName))
                    {
                        <div class="row">
                            <div class="col-12">
                                <div class="card p-2 m-2">
                                    <div class="row">
                                        <div class="col-9">
                                            <h5>@item.PollName</h5>
                                        </div>
                                        <div class="col-3 text-right">
                                            <button type="button" class="btn btn-sm btn-outline-primary" @onclick="(()=>ToggleQuestionPanel(item))">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
                                                    <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z" />
                                                </svg>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-primary" @onclick="(()=>ToggleCreatePanel(item))">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                                                </svg>
                                            </button>
                                            @if (item.IsPublished)
                                            {
                                                <button type="button" class="btn btn-sm btn-success m-1" title="Click to Unpublish Poll" @onclick="(()=>Unpublish(item))">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                                                        <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m7.5-6.923c-.67.204-1.335.82-1.887 1.855A8 8 0 0 0 5.145 4H7.5zM4.09 4a9.3 9.3 0 0 1 .64-1.539 7 7 0 0 1 .597-.933A7.03 7.03 0 0 0 2.255 4zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a7 7 0 0 0-.656 2.5zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5zM8.5 5v2.5h2.99a12.5 12.5 0 0 0-.337-2.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5zM5.145 12q.208.58.468 1.068c.552 1.035 1.218 1.65 1.887 1.855V12zm.182 2.472a7 7 0 0 1-.597-.933A9.3 9.3 0 0 1 4.09 12H2.255a7 7 0 0 0 3.072 2.472M3.82 11a13.7 13.7 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5zm6.853 3.472A7 7 0 0 0 13.745 12H11.91a9.3 9.3 0 0 1-.64 1.539 7 7 0 0 1-.597.933M8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855q.26-.487.468-1.068zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.7 13.7 0 0 1-.312 2.5m2.802-3.5a7 7 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7 7 0 0 0-3.072-2.472c.218.284.418.598.597.933M10.855 4a8 8 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4z" />
                                                    </svg>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-primary m-1" title="Publish Poll" @onclick="(()=>PublishPoll(item))">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                                                        <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m7.5-6.923c-.67.204-1.335.82-1.887 1.855A8 8 0 0 0 5.145 4H7.5zM4.09 4a9.3 9.3 0 0 1 .64-1.539 7 7 0 0 1 .597-.933A7.03 7.03 0 0 0 2.255 4zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a7 7 0 0 0-.656 2.5zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5zM8.5 5v2.5h2.99a12.5 12.5 0 0 0-.337-2.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5zM5.145 12q.208.58.468 1.068c.552 1.035 1.218 1.65 1.887 1.855V12zm.182 2.472a7 7 0 0 1-.597-.933A9.3 9.3 0 0 1 4.09 12H2.255a7 7 0 0 0 3.072 2.472M3.82 11a13.7 13.7 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5zm6.853 3.472A7 7 0 0 0 13.745 12H11.91a9.3 9.3 0 0 1-.64 1.539 7 7 0 0 1-.597.933M8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855q.26-.487.468-1.068zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.7 13.7 0 0 1-.312 2.5m2.802-3.5a7 7 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7 7 0 0 0-3.072-2.472c.218.284.418.598.597.933M10.855 4a8 8 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4z" />
                                                    </svg>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                    <p class="small">@item.PollDescription</p>
                                    <div class="p-2">
                                        <a class="btn btn-sm btn-outline-primary" href="PollResults/@item.PublicId">View Votes</a>
                                    </div>

                                    <div class="text-right small">
                                        @item.DateCreated.ToShortDateString()
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        @if (ShowPollPanel)
        {
            <EditForm Model="newPoll" OnSubmit="CreateNewPoll">

                <div class="modal fade show" id="myModal" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.8);">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content modal-dialog">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalTitle">Create A Poll</h5>
                                <button type="button" class="btn btn-sm btn-outline-secondary" title="close" @onclick="(()=>ToggleCreatePanel(null))">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                        <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                    </svg>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div>
                                    <label>Name <span class="text-danger">*</span></label>
                                    <input type="text" placeholder="Poll Name" class="form-control form-control-sm" @bind="newPoll.PollName" required />
                                </div>
                                <div>
                                    <label>Description</label>
                                    <textarea type="text" placeholder="Poll Description" class="form-control form-control-sm" @bind="newPoll.PollDescription">
                                        </textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-sm btn-primary">Save Poll</button>
                                <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="(()=>ToggleCreatePanel(null))" title="close">Close</button>
                            </div>
                        </div>

                    </div>
                </div>
            </EditForm>
        }

        @if (ShowQuestionPanel)
        {
            <div class="modal fade show" id="myModal" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.8);">
                <div class="modal-dialog modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header row  m-1">
                                <div class="col-10">
                                    <h5 class="modal-title" id="modalTitle">Poll Quesions</h5>
                                </div>
                                <div class="col-2 text-right">

                                <button type="button" class="btn btn-sm btn-outline-danger" @onclick="DeletePoll">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                            <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0" />
                                        </svg>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-secondary" title="close" @onclick="(()=>ToggleQuestionPanel(null))">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                        </svg>
                                    </button>
                                </div>
                        </div>
                        <div class="modal-body">
                            <Questions questionsModel="questions" pollId="@PollId" pollName="@TargetPollName">

                            </Questions>
                        </div>
                    </div>

                </div>
            </div>
        }

        @if (PublicId != null)
        {
            <div class="modal fade show" id="myModal" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.8);">
                <div class="modal-dialog modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Success!</h5>
                            <button type="button" class="btn btn-sm btn-outline-secondary" title="close" @onclick="(()=>PublicId = null)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                    <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                </svg>
                            </button>
                        </div>
                        <div class="modal-body">
                            Poll published successfully.
                            <br />
                            <a href="/Vote/@PublicId" class="btn btn-sm btn-success">Click to Vote</a>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="(()=>PublicId = null)" title="close">Close</button>
                        </div>
                    </div>

                </div>
            </div>
        }

        @if (ShowPollWarning)
        {
            <div class="modal fade show" id="myModal" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.8);">
                <div class="modal-dialog modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Warning</h5>
                            <button type="button" class="btn btn-sm btn-outline-secondary" title="close" @onclick="(()=>ShowPollWarning = false)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                    <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                </svg>
                            </button>
                        </div>
                        <div class="modal-body">
                            Opps, poll already has votes.  Therefore it cannot be unpublished.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="(()=>ShowPollWarning = false)" title="close">Close</button>
                        </div>
                    </div>

                </div>
            </div>
        }
    }
    else
    {
        <p>
            You need to be logged in to Create Polls
            <br />
            <a href="Identity/Account/Login">Login</a>
        </p>
    }

</div>
@code {
    private DataAccess.Context.Poll newPoll;
    private List<DataAccess.Context.Poll> myPolls;

    public List<Question> questions { get; set; }
    public List<PollVoteModel> PollModels { get; set; }

    bool ShowPollPanel { get; set; }
    bool ShowQuestionPanel { get; set; }
    bool ShowPollWarning { get; set; }
    string UserId { get; set; }
    public string PollId { get; set; }
    public string TargetPollName { get; set; }

    public string PublicId{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        var auth = await _provider.GetAuthenticationStateAsync();
        UserId = auth.User.FindFirstValue(ClaimTypes.NameIdentifier);
        PolulatePolls();
    }
    void DeletePoll()
    {
        if (PollId != null)
        {
            _pollData.Delete(PollId);
            PolulatePolls();
            PollId = null;
            ToggleQuestionPanel(null);
        }
    }
    void PolulatePolls()
    {
        myPolls = _pollData.GetByCreator(UserId);
        if (myPolls != null)
        {
            foreach (var item in myPolls)
            {
                item.Questions = _questions.GetByPoll(item.Id);
            }
        }
    }

    void Unpublish(DataAccess.Context.Poll item)
    {
        if (!_service.CheckVoteForPoll(item.PublicId))
        {
            item.IsPublished = false;
            item.DatePublished = null;
            item.PublicId = null;
            _pollData.Update(item);
            PolulatePolls();
        }
        else
        {
            ShowPollWarning = true;
        }
    }

    void PublishPoll(DataAccess.Context.Poll poll)
    {
        PublicId =  _service.Publish(poll);
    }

    void ToggleQuestionPanel(DataAccess.Context.Poll targetPoll)
    {
        ShowQuestionPanel = !ShowQuestionPanel;
        if (ShowQuestionPanel)
        {
            if (targetPoll != null)
            {
                if (targetPoll.Questions == null)
                {
                    targetPoll.Questions = new List<Question>();
                }
                else
                {
                    questions = targetPoll.Questions;
                }
                PollId = targetPoll.Id;
                TargetPollName = targetPoll.PollName;
            }
        }
    }
    public void ToggleCreatePanel(DataAccess.Context.Poll poll)
    {
        ShowPollPanel = !ShowPollPanel;
        if (ShowPollPanel)
        {
            if (poll == null)
            {
                newPoll = new DataAccess.Context.Poll()
                {
                    DateCreated = DateTime.Now,
                    UserId = UserId,
                };
            }
            else
            {
                newPoll = poll;
            }
        }
        else
        {
            newPoll = null;
        }
    }
    void CreateNewPoll()
    {
        if (newPoll != null && newPoll.PollName != null)
        {
            if (newPoll.Id == null)
            {
                newPoll.Id = _pollData.Create(newPoll);
                if (myPolls == null)
                {
                    myPolls = new List<DataAccess.Context.Poll>();
                }
                myPolls.Add(newPoll);
                ToggleCreatePanel(null);
            }
            else
            {
                UpdatePoll();
            }
        }
    }

    void UpdatePoll()
    {
        var updatedPoll = _pollData.Update(newPoll);
        if (updatedPoll != null)
        {
            myPolls.Where(x => x.Id == newPoll.Id).FirstOrDefault().PollName = newPoll.PollName;
            ToggleCreatePanel(null);
        }
    }

    void CreateQuestion()
    {
        //Question question
    }
}
